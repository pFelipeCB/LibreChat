# Do not edit this file directly. Use a ‘docker-compose.override.yaml’ file if you can.
# Refer to `docker-compose.override.yaml.example’ for some sample configurations.

version: '3.8' # Añadido para especificar la versión del compose

services:
  api:
    container_name: LibreChat # Nombre del contenedor
    ports:
      - "${PORT}:${PORT}" # Coolify gestionará esto basado en tu variable PORT
    depends_on:
      mongodb:
        condition: service_started 
      meilisearch:
        condition: service_started
    # image: ghcr.io/danny-avila/librechat-dev:latest # Cambiamos a build
    build:
      context: . 
      dockerfile: Dockerfile 
    restart: always
    # user: "${UID}:${GID}" # Comentado
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://mongodb:27017/LibreChat 
      - MEILI_HOST=http://meilisearch:7700
      - CONFIG_PATH=/app/librechat.yaml 
      - PORT=${PORT:-3080}
      # Las demás variables (DOMAIN_CLIENT, OPENROUTER_API_KEY, etc.) vendrán de Coolify
    volumes:
      - ./librechat.yaml:/app/librechat.yaml:ro 
      # - type: bind # Comentado, ya que Coolify crea el .env
      #   source: ./.env
      #   target: /app/.env
      - ./images:/app/client/public/images
      - librechat_uploads_vol:/app/uploads 
      - librechat_logs_vol:/app/api/logs   
    healthcheck: 
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-3080}/ || exit 1"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s 

  mongodb:
    container_name: chat-mongodb
    image: mongo:6 
    restart: always
    # user: "${UID}:${GID}"
    volumes:
      - librechat_mongo_data_vol:/data/db 
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.7 
    restart: always
    # user: "${UID}:${GID}"
    environment:
      - MEILI_ENV=production
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY} 
      - MEILI_NO_ANALYTICS=true
    volumes:
      - librechat_meili_data_vol:/meili_data 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7700/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes: 
  librechat_mongo_data_vol:
  librechat_meili_data_vol:
  librechat_uploads_vol: 
  librechat_logs_vol:
