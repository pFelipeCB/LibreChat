version: '3.8'

services:
  api:
    container_name: librechat_app_api
    build:
      context: .
      dockerfile: Dockerfile # Asume que el Dockerfile principal de LibreChat se llama así
    ports:
      - "${PORT}:${PORT}" 
    depends_on:
      mongodb:
        condition: service_started 
      meilisearch:
        condition: service_started
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - HOST=0.0.0.0
      - PORT=${PORT:-3080} 
      - MONGO_URI=mongodb://mongodb:27017/LibreChat 
      - MEILI_HOST=http://meilisearch:7700
      - CONFIG_PATH=/app/librechat.yaml 
    volumes:
      - ./librechat.yaml:/app/librechat.yaml:ro 
      - ./images:/app/client/public/images # Si tienes imágenes personalizadas
      - librechat_uploads_vol:/app/uploads 
      - librechat_logs_vol:/app/api/logs   
    healthcheck: 
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-3080}/ || exit 1"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s 

  mongodb:
    container_name: chat_mongodb_service # Nombre de servicio único
    image: mongo:6 
    restart: unless-stopped
    volumes:
      - librechat_mongo_data_vol:/data/db 
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  meilisearch:
    container_name: chat_meilisearch_service # Nombre de servicio único
    image: getmeili/meilisearch:v1.7 
    restart: unless-stopped
    environment:
      - MEILI_ENV=production
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY} 
      - MEILI_NO_ANALYTICS=true
    volumes:
      - librechat_meili_data_vol:/meili_data 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7700/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes: 
  librechat_mongo_data_vol:
  librechat_meili_data_vol:
  librechat_uploads_vol: 
  librechat_logs_vol:
